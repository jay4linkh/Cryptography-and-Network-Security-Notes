Initial Permuation:

58 50 42 34 26 18 10  2
60 52 44 36 28 20 12  4
62 54 46 38 30 22 14  6
64 56 48 40 32 24 16  8
57 49 41 33 25 17  9  1
59 51 43 35 27 19 11  3
61 53 45 37 29 21 13  5
63 55 47 39 31 23 15  7

Bit in position 58 of the original plaintext becomes the first bit of the permuted output, the bit in position 50 becomes the second bit.

Final Permutation:

40  8 48 16 56 24 64 32
39  7 47 15 55 23 63 31
38  6 46 14 54 22 62 30
37  5 45 13 53 21 61 29
36  4 44 12 52 20 60 28
35  3 43 11 51 19 59 27
34  2 42 10 50 18 58 26
33  1 41  9 49 17 57 25

Bit in position 40 of the data after the final DES round becomes the first bit of the output, the bit in position 8 becomes the second bit

Straight Pbox Shuffling positions:

16  7 20 21
29 12 28 17
 1 15 23 26
 5 18 31 10
 2  8 24 14
32 27  3  9
19 13 30  6
22 11  4 25


Expansion P-box Table:
The table below shows how each of the 48 output bits is derived from the 32 input bits:
Position
Input Bit
1 32
2 1
3 2
4 3
5 4
6 5
7 4
8 5
9 6
10 7
11 8
12 9
13 8
14 9
15 10
16 11
17 12
18 13
19 12
20 13
21 14
22 15
23 16
24 1
25 16
26 1
27 2
28 3
29 4
30 5
31 4
32 5
33 6
34 7
35 8
36 9
37 8
38 9
39 10
40 11
41 12
42 13
43 12
44 13
45 14 
46 15
47 16
48 1


Step-by-Step Example:
Let's say our 32-bit right half (R) is:
R = 0110 1101 1011 1001 1110 0001 0010 0110

This means:
R1 = 0
R2 = 1
R3 = 1
R4 = 0
R5 = 1
R6 = 1
R7 = 0
R8 = 1
R9 = 1
R10 = 0
R11 = 1
R12 = 1
R13 = 0
R14 = 0
R15 = 1
R16 = 0
R17 = 1
R18 = 1
R19 = 1
R20 = 0
R21 = 1
R22 = 1
R23 = 1
R24 = 1
R25 = 1
R26 = 0
R27 = 0
R28 = 0
R29 = 1
R30 = 1
R31 = 1
R32 = 0
Using the Expansion P-box table, we will map the bits as follows:
E1 = R32 = 0
E2 = R1 = 0
E3 = R2 = 1
E4 = R3 = 1
E5 = R4 = 0
E6 = R5 = 1
E7 = R4 = 0 (repeated)
E8 = R5 = 1 (repeated)
E9 = R6 = 1
E10 = R7 = 0
E11 = R8 = 1
E12 = R9 = 1
E13 = R8 = 1 (repeated)
E14 = R9 = 1 (repeated)
E15 = R10 = 0
E16 = R11 = 1
E17 = R12 = 1
E18 = R13 = 0
E19 = R12 = 1 (repeated)
E20 = R13 = 0 (repeated)
E21 = R14 = 0
E22 = R15 = 1
E23 = R16 = 0
E24 = R1 = 0 (repeated)
E25 = R16 = 0 (repeated)
E26 = R1 = 0 (repeated)
E27 = R2 = 1 (repeated)
E28 = R3 = 1 (repeated)
E29 = R4 = 0 (repeated)
E30 = R5 = 1 (repeated)
E31 = R4 = 0 (repeated)
E32 = R5 = 1 (repeated)
E33 = R6 = 1 (repeated)
E34 = R7 = 0 (repeated)
E35 = R8 = 1 (repeated)
E36 = R9 = 1 (repeated)
E37 = R8 = 1 (repeated)
E38 = R9 = 1 (repeated)
E39 = R10 = 0 (repeated)
E40 = R11 = 1 (repeated)
E41 = R12 = 1 (repeated)
E42 = R13 = 0 (repeated)
E43 = R12 = 1 (repeated)
E44 = R13 = 0 (repeated)
E45 = R14 = 0 (repeated)
E46 = R15 = 1 (repeated)
E47 = R16 = 0 (repeated)
E48 = R1 = 0 (repeated)
Putting these together, the 48-bit expanded output (E) will be:

E = 0010 0101 1101 0110 1011 1000 1011 0001 0110 1011 0001 1010

Key Permutation (PC-1):
PC-1 table:
57 49 41 33 25 17  9
 1 58 50 42 34 26 18
10  2 59 51 43 35 27
19 11  3 60 52 44 36
63 55 47 39 31 23 15
 7 62 54 46 38 30 22
14  6 61 53 45 37 29
21 13  5 28 20 12  4
 
We'll apply PC-1 to our 64-bit key to get a 56-bit key.

We'll perform left shifts according to the schedule and apply PC-2 to generate the subkeys for each of the 16 rounds.
PC-2 table:
 
14 17 11 24  1  5
 3 28 15  6 21 10
23 19 12  4 26  8
16  7 27 20 13  2
41 52 31 37 47 55
30 40 51 45 33 48
44 49 39 56 34 53
46 42 50 36 29 32

S-Box Tables:
sbox = [[[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],
         [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],
         [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],
         [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]],
 
        [[15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10],
         [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5],
         [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15],
         [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9]],
 
        [[10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8],
         [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1],
         [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7],
         [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12]],
 
        [[7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15],
         [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9],
         [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4],
         [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14]],
 
        [[2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9],
         [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 8, 9, 3, 10, 6],
         [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14],
         [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3]],
 
        [[12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11],
         [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8],
         [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6],
         [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13]],
 
        [[4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1],
         [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6],
         [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2],
         [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]],
 
        [[13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7],
         [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2],
         [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8],
         [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]]]


